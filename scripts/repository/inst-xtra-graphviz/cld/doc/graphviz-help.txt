# Ref
    http://www.graphviz.org/doc/info/attrs.html
    http://www.graphviz.org/doc/info/arrows.html
    https://www.graphviz.org/doc/info/shapes.html
    
# General output
    dot -Tpng -o Output.png Input.dot

# Comments
    // This is a single line comment.
    /* This is a
        multiple line
        comment. */
    # Lines like this are also ignored.
    
# Frequently used attributes
    digraph G {
      graph [
        label="Show general attributes\n that can be used",
        labelloc=t,	//t=top, b=bottom
        labeljust=r,	//r=right justified, l=left justified
        overlap=false, 
        center=true, 
        bgcolor=green, 
        fontcolor=red, 
        fontsize=24, 
        rankdir=TB,	// Orientation: TB=Top to Bottom, LR=Left to right
        URL="G.html",	// Need to generate as ismap to be clickable
        nodesep=3.0	// increases the separation between nodes
            ];
      node    [shape=circle, style=filled, fontname="Courier"];
      edge    [color=blue]; // dir="none"
     
      a [label="Node A", width=1.25, style=filled, fillcolor=white, color=black, URL="A.html"];
     
      {rank=same; "b"; "c";}
     
      a -> b [ taillabel="Tail Label", labelangle=45, labeldistance=5, color=red, fontcolor=blue];
     
      b -> c [ headlabel="Head Label", 
        labeldistance=2, 
        color=transparent, 
        dir=back		// back=Revert arrow direction, both=arrow on both ends
        URL="b.html"		// Need to generate as ismap to be clickable
         ];
     
      external_image [label="", shape=box, style=invis, shapefile="image.png"];
    }
    
# Historical event graph
    # https://stackoverflow.com/a/37573076
    digraph {

        node [shape=plaintext, fontsize=16];

        past -> 1933 -> 1943 -> 1988 -> 2001 -> 2015 -> future;

        {
            node [fontsize=14];
            edge [style=invis];

            a -> b -> c -> d -> e -> f -> g;
        }       

        {rank=same past -> a }
        {rank=same 1943 -> c }
        {rank=same future  g }   
    }
    
# UML
    digraph G {
        fontname = "Bitstream Vera Sans"
        fontsize = 8

        node [
                fontname = "Bitstream Vera Sans"
                fontsize = 8
                shape = "record"
        ]

        edge [
                fontname = "Bitstream Vera Sans"
                fontsize = 8
        ]

        Animal [
                label = "{Animal|+ name : string\l+ age : int\l|+ die() : void\l}"
        ]
    }
    # The opening and closing curly braces "{" and "}" indicate that we want to create a "record" shape with multiple dividers.
    # The pipe characters "|" indicate the dividers, we use one to separate the class name from the attributes and another one to separate the methods from the attributes.
    #Putting the "\l" characters after a line of text indicates the line should be aligned to the left side of the shape and that a new line of text should start.
