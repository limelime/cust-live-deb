https://btrfs.wiki.kernel.org/index.php/Using_Btrfs_with_Multiple_Devices
https://seravo.fi/2016/perfect-btrfs-setup-for-a-server

# By default, metadata will be mirrored across two devices and data will be striped across all of the devices present. This is equivalent to mkfs.btrfs -m raid1 -d raid0.

# Create a RAID1 mirror. metadata(-m) and data(-d) are mirrored.
    mkfs.btrfs -L MyMirrorDisks -m raid1 -d raid1 /dev/sda /dev/sdb

# Show status.
    btrfs fi show
    btrfs filesystem show

# Add label.
    btrfs filesystem label [<device>|<mount_point>] [<newlabel>]

# Show RAID profile.
    btrfs filesystem df <mount_point>

# Create a filesystem across four drives (metadata mirrored, linear data allocation)
    mkfs.btrfs -d single /dev/sdb /dev/sdc /dev/sdd /dev/sde

# Stripe the data without mirroring, metadata are mirrored
    mkfs.btrfs -d raid0 /dev/sdb /dev/sdc

# Use raid10 for both data and metadata
    mkfs.btrfs -m raid10 -d raid10 /dev/sdb /dev/sdc /dev/sdd /dev/sde

# Don't duplicate metadata on a single drive (default on single SSDs)
    mkfs.btrfs -m single /dev/sdb
    
# Use full capacity of multiple drives with different sizes (metadata mirrored, data not mirrored and not striped)
    mkfs.btrfs -d single /dev/sdb /dev/sdc

# Scan all devices
    btrfs device scan

# Scan a single device
    btrfs device scan /dev/sdb
    
# How do I create a RAID10 striped mirror in Btrfs?
    mkfs.btrfs -m RAID10 -d RAID10 /dev/sda1 /dev/sdb1 /dev/sdc1 /dev/sdd1

# Mount in degraded mode.
    mount -o degraded /dev/sdg /tmp/mountpoint/kkk/

# Add device.
    btrfs device add /dev/sdj /tmp/mountpoint/kkk/
    
# Cleanup by deleting missing devices.
    btrfs device delete missing /tmp/mountpoint/kkk/
    
# Re-balance filesystem.
    btrfs filesystem balance /tmp/mountpoint/kkk/
    
# Scrub is used to scrub a btrfs filesystem, which will read all data and metadata blocks from all devices and verify checksums. Automatically repair corrupted blocks if thereâ€™s a correct copy available.
    btrfs scrub start /tmp/mountpoint/kkk/
    btrfs scrub status /tmp/mountpoint/kkk/
    btrfs scrub resume /tmp/mountpoint/kkk/

# If a scrub does not correct errors, you can use the following mount option to roll back to a known good B-tree, given that the rest of the tree is available because of copy-on-write:
    mount -o recovery /dev/sda /tmp/mountpoint/kkk/
